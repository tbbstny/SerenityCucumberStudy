# NOTICE: This file MUST be in the project root folder (not in src/*/resources),
# otherwise tests will execute OK but the report will not generate correctly.
serenity.project.name=Serenity Study Tests
serenity.take.screenshots=AFTER_EACH_STEP
serenity.use.unique.browser=true
serenity.browser.height=800
serenity.browser.width=1280
serenity.console.colors = true
#serenity.dry.run=true
narrative.format=asciidoc
# QUITE | NORMAL | VERBOSE
serenity.logging=NORMAL
serenity.verbose.steps=false
serenity.console.headings=normal

# Serenity requires a *file system* path to the root of the requirements hierarchy
# setting [serenity.requirement.types=theme, epic, feature] configures a three level
# hierarchy Sereneity expects in the file system and reflects in the generated reports:
# ${serenity.requirements.dir}/theme_folder/epic_folder/feature_file (i.e. our BDDs)
# A narrative.txt file may also be added to the theme and epic folders and will be
# reflected in the generated reports.
#
# Typically this hierarchy is setup in src/test/resources/**.  However, our CI
# environment and integration with our Jenkins test runner job does not have access
# to the src folder as the job pulls jars from artifactory and scans those instead.
# In order to facilitate Jenkins integration, we must extract the feature files
# (and other necessary files like webdrivers and narratives) from the test jar and
# make them available to Serenity.  The pomIT.xml uses the maven-antrun-plugin for
# this purpose, and extracts the features to target/features.  Therefore, we
# typically provide a path into target/features to facilitate CI and test runners.
serenity.test.root=com.ttt.serenity.study
serenity.requirements.dir=target/features/com/ttt/serenity/study
#serenity.requirements.dir=src/test/resources/com/dstsystems/alloy/aibpo
serenity.requirement.types=theme, epic, feature
show.pie.charts=false
dashboard.tag.list=
dashboard.excluded.tag.list=tags


webdriver.base.url=https://www.amazon.com/

# Define the default driver
# firefox, chrome, phantomjs, iexplorer
webdriver.driver=chrome

# chrome configuration
webdriver.chrome.driver=target/drivers/chromedriver.exe
chrome.switches=--disable-extensions

# phantomjs configuration
phantomjs.binary.path=target/drivers/phantomjs.exe

# ie configuration
# IE Driver must be set as system property - see pomIT.xml properties and failsafe plugin systemProperties
# webdriver.ie.driver=target/drivers/IEDriverServer.exe

# firefox configuration
# Hmm.  If these settings are applied, Firefox always opens on 'first use' page breaking tests
# firefox.preferences="browser.shell.checkDefaultBrowser=false;browser.startup.homepage=about:blank;startup.homepage_welcome_url=about:blank;startup.homepage_welcome_url.additional=about:blank;browser.startup.homepage_override.mstone=ignore;layout.css.devPixelsPerPx=1.0"
